
Create Framework 2 approaches 
  1- you can create framework by Terminal command without example or with example any.
  2- You can create framework by Xcode -> New-> Framework

Create Pod library Template project by Terminal
$ pod lib create YourLibraryName

Provide the all answers question ask by terminal 


Validation project library by lint command
In side of SDK
 $ pod lib lint



—————————————— ————————————————— ————————————————— 

Distribute POD space on Git
Design your pod space at below architecture of folder
Root Folder    [Create this Folder at GIT repo and clone in your system and design your folder]
  -> SDK name folder  0.1.0
    -> version number
      -> sdk podsapce file
  -> SDK name folder 
    -> version number 0.1.1
      -> sdk podsapce file
  

once u paste your podspace in above version and folder then push on git repo (Root Folfer git path)
as our pod space is available in git as public, so in xcode POD file your have to maintion your source like below

platform :ios, '13.0'
source 'https://github.com/amrendra-roy/DemoPodSpacesAtGit.git'  //amar this is repo at git version and folder structure

target 'FWSampleDemoApp' do
  # Comment the next line if you don't want to use dynamic frameworks
  use_frameworks!

  pod 'FWAmarFramewokrFromGitOnly', '0.1.0' //version number which u want to install, it will show in your POD folder, code will be visible in this case as we can see code other pod like Firebase
  //other pod
  pod 'MBProgressHUD'

end

* PODspace and version is not working for me, facing issue while instaling same pod with new version like 0.1.1, 
# below source and pod version is usefull when are creating pod space in git, but i am facing the issue for other version which is creatd on top of old to fix new changes other commit. So ignore this approach as of now. Instead use direct git path and version number
#source 'https://github.com/amrendra-roy/DemoPodSpacesAtGit.git' #pod FWAmarFramewokrFromGitOnly availble here
#pod 'FWAmarFramewokrFromGitOnly', '~> 0.1.1'

* so use different approach like below:
Just Create your git project and post at it, make changes and push with tag number. then use below line to install pod in your Client App
  pod 'FWAmarFramewokrFromGitOnly', :git => 'https://github.com/amrendra-roy/FWAmarFramewokrFromGitOnly.git', :tag => '0.1.1'





—————————————— ————————————————— ————————————————— 
Practice 


FWAmarInvestmentSDK
  - use UI screens and rescue as well

FWAmarRechargeSDK
  - follow asset, class structure 

Sample App:
  - using above both sdk


Using SDK in SampleApp when sdk have podspace file
* To use FWAmarRechargeSDK in SampleApp, just provide path of SDK in PDO file, I.e  pod 'FWAmarRechargeSDK', :path => '../FWAmarRechargeSDK'


Using SDK in SampleApp when sdk don’t have podspace file
* If your sdk don’t have pod space file, then drag and drop sdk Xcode project in Sample App, then build sdk and add in SamplePRoject target General-> Framework, Libraries, and Embedded content
* in SDK: provide init method as public for those classes which are going to use from SampleApp












—————————————— ————————————————— ————————————————— 





Reference:
Configuration: https://medium.com/flawless-app-stories/managing-different-environments-using-xcode-build-schemes-and-configurations-af7c43f5be19

POD/Framework: https://www.raywenderlich.com/5109-creating-a-framework-for-ios
Color/image: https://medium.com/better-programming/ios-build-your-cocoapods-framework-with-an-example-app-from-scratch-fd0f7bdf3f8c






GIT Command

git commit -m "Initial commit"
git push -u origin master(YourBranchName)


For Tagging only
git tag 1.0.0
git push --tags






————————————————————
iOS archive
xcodebuild archive -scheme FrameworkLearning -configuration Release -destination 'generic/platform=iOS' -archivePath './build/FrameworkLearning.framework-iphoneos.xcarchive' SKIP_INSTALL=NO BUILD_LIBRARIES_FOR_DISTRIBUTION=YES

Simulators archive
xcodebuild archive  -scheme FrameworkLearning -configuration Release -destination 'generic/platform=iOS Simulator' -archivePath './build/FrameworkLearning.framework-iphonesimulator.xcarchive' SKIP_INSTALL=NO BUILD_LIBRARIES_FOR_DISTRIBUTION=YES

macOS archive
xcodebuild archive -scheme FrameworkLearning -configuration Release -destination 'platform=macOS,arch=x86_64,variant=Mac Catalyst' -archivePath './build/FrameworkLearning.framework-catalyst.xcarchive' SKIP_INSTALL=NO BUILD_LIBRARIES_FOR_DISTRIBUTION=YES


xcodebuild -create-xcframework -framework './build/FrameworkLearning.framework-iphonesimulator.xcarchive/Products/Library/Frameworks/FrameworkLearning.framework' -framework './build/FrameworkLearning.framework-iphoneos.xcarchive/Products/Library/Frameworks/FrameworkLearning.framework' -framework './build/FrameworkLearning.framework-catalyst.xcarchive/Products/Library/Frameworks/FrameworkLearning.framework' -output './build/FrameworkLearning.xcframework'

A framework created by Terminal with example, this is only for framework learning purpose. A SKD which provide recharge facilities only.
Investment 

Amar Resources
Framework learning Client App


FWAmarInvestmentSDK
  - use UI screens and rescue as well
FWAmarRechargeSDK
  - follow asset, class structure 

Sample App:
  - using above both sdk





———
- Use with by local path
- Use by posting git
- Use by posting private
- Use by posting in git private 
————



